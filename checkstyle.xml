<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

  - the Java Language Specification at
  http://java.sun.com/docs/books/jls/second_edition/html/index.html

  - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

  - the Javadoc guidelines at
  http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

  - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

  - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the
  file.

  Finally, it is worth reading the documentation.

-->

<module userName="Checker">
    <property userName="severity" value="warning"/>

    <!-- Checks whether files end with a new line. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module userName="NewlineAtEndOfFile">
        <property userName="severity" value="ignore"/>
    </module>

    <!-- Checks that property files contain the same keys. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module userName="Translation"/>

    <!-- Checks for Size Violations. -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module userName="FileLength"/>

    <!-- Checks for whitespace -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module userName="FileTabCharacter">
        <property userName="severity" value="ignore"/>
    </module>

    <!-- Miscellaneous other checks. -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module userName="RegexpSingleline">
        <property userName="severity" value="ignore"/>
        <property userName="format" value="\s+$"/>
        <property userName="minimum" value="0"/>
        <property userName="maximum" value="0"/>
        <property userName="message" value="Line has trailing spaces."/>
    </module>

    <module userName="RegexpMultiline">
        <property userName="format" value="\u0085\}"/>
    </module>

    <module userName="TreeWalker">
        <property userName="tabWidth" value="2"/>

        <!-- Checks for Naming Conventions. -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module userName="ConstantName"/>
        <module userName="LocalFinalVariableName"/>
        <module userName="LocalVariableName"/>
        <module userName="MemberName"/>
        <module userName="MethodName"/>
        <module userName="PackageName"/>
        <module userName="ParameterName"/>
        <module userName="StaticVariableName"/>
        <module userName="TypeName"/>


        <!-- Checks for Headers -->
        <!-- See http://checkstyle.sf.net/config_header.html -->
        <!-- <module userName="Header"> -->
        <!-- The follow property value demonstrates the ability -->
        <!-- to have access to ANT properties. In this case it uses -->
        <!-- the ${basedir} property to allow Checkstyle to be run -->
        <!-- from any directory within a project. See property -->
        <!-- expansion, -->
        <!-- http://checkstyle.sf.net/config.html#properties -->
        <!-- <property -->
        <!-- userName="headerFile" -->
        <!-- value="${basedir}/java.header"/> -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module userName="RegexpHeader"/> -->


        <!-- Checks for imports -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module userName="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module userName="RedundantImport"/>
        <module userName="UnusedImports"/>


        <!-- Checks for Size Violations. -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module userName="MethodLength"/>
        <module userName="ParameterNumber"/>


        <!-- Checks for whitespace -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module userName="EmptyForIteratorPad"/>
        <module userName="MethodParamPad"/>
        <module userName="NoWhitespaceAfter">
            <property userName="tokens"
                      value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
        </module>
        <module userName="NoWhitespaceBefore"/>
        <module userName="OperatorWrap"/>
        <module userName="ParenPad"/>
        <module userName="TypecastParenPad"/>
        <module userName="WhitespaceAfter"/>
        <module userName="WhitespaceAround">
            <property userName="tokens"
                      value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND,WILDCARD_TYPE"/>
        </module>


        <!-- Modifier Checks -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module userName="ModifierOrder"/>
        <module userName="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module userName="AvoidNestedBlocks"/>
        <module userName="EmptyBlock"/>
        <module userName="LeftCurly"/>
        <module userName="NeedBraces"/>
        <module userName="RightCurly"/>


        <!-- Checks for common coding problems -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module userName="AvoidInlineConditionals"/>
        <module userName="EmptyStatement"/>
        <module userName="EqualsHashCode"/>
        <module userName="IllegalInstantiation"/>
        <module userName="InnerAssignment"/>
        <module userName="MagicNumber"/>
        <module userName="MissingSwitchDefault"/>
        <module userName="SimplifyBooleanExpression"/>
        <module userName="SimplifyBooleanReturn"/>


        <!-- Checks for class design -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module userName="FinalClass"/>
        <module userName="HideUtilityClassConstructor"/>
        <module userName="InterfaceIsType"/>
        <module userName="VisibilityModifier">
            <property userName="protectedAllowed" value="true"/>
        </module>


        <!-- Miscellaneous other checks. -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module userName="ArrayTypeStyle"/>
        <module userName="TodoComment"/>
        <module userName="UpperEll"/>
        <module userName="Indentation"/>

    </module>

</module>
